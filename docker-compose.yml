version: "3"
services:
    nginx_hackaton:
        container_name: nginx_hackaton
        build:
            context: ./docker/nginx
            dockerfile: Dockerfile
        ports:
            - "${APP_PORT}:80"
        networks:
            - internal
        volumes:
            - ./:/var/www/html/
            - ./storage/logs/nginx:/var/log/nginx/
    php_hackaton:
        container_name: php_hackaton
        build:
            context: ./docker/php
            dockerfile: DockerfileDev
            args:
                user: ${USER}
                uid: 1000
                APP_ENV: ${APP_ENV}
        depends_on:
            - redis
        ports:
            - "9000:9000"
        networks:
            - internal
        volumes:
            - ./:/var/www/html/
            - ./storage/logs/php.log:/var/log/fpm-php.www.log
        expose:
            - "9000"
    redis:
        image: redis
        command: redis-server
        container_name: redis_hackaton
        tty: true
        restart: on-failure
        networks:
            - internal
        ports:
            - "6379:6379"
    mailhog:
        image: mailhog/mailhog:latest
        container_name: mailhog_hackaton
        #restart: on-failure
        ports:
            - 1025:1025 # - servidor smtp
            - 8025:8025 # - acesso ao web
        networks:
            - internal
    # horizon:
    #     build:
    #         context: ./docker/php
    #         dockerfile: Dockerfile
    #         args:
    #             user: ${USER}
    #             uid: 1000
    #     container_name: horizon
    #     command: php artisan horizon
    #     volumes:
    #         - ./:/var/www/html/
    #     depends_on:
    #     - php_hackaton
    #     - nginx_hackaton
    #     - redis
    #     networks:
    #     - internal
    mariadb:
        image: 'mariadb:latest'
        container_name: 'mariadb_hackaton'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: 'rootpassword'
            MYSQL_DATABASE: 'laravel'
            MYSQL_USER: 'laraveluser'
            MYSQL_PASSWORD: 'laravelpassword'
        volumes:
            - 'db-data-hackaton:/var/lib/mysql'
        networks:
            - internal
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-p rootpassword" ]
            retries: 3
            timeout: 5s
networks:
    internal:
        driver: bridge
volumes:
    db-data-hackaton:
        driver: local
